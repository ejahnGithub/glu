#if !defined(BUILTINS_KIND)
#define BUILTINS_KIND
#endif // BUILTINS_KIND

#if !defined(BUILTIN_BINARY_OP)
#define BUILTIN_BINARY_OP(ID, NAME, RET, ARG1, ARG2) BUILTINS_KIND(ID)
#endif // BUILTIN_BINARY_OP

// Binary Builtins functions definitons works as follow:
// BUILTIN_BINARY_OP(ID, NAME, RET, ARG1, ARG2)
// ID: The enum identifier for the builtin function.
// NAME: The name of the builtin function.
// RET: The return type of the builtin function.
// ARG1: The type of the first argument.
// ARG2: The type of the second argument.

BUILTIN_BINARY_OP(AddInt8, "builtin_add", TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8))
BUILTIN_BINARY_OP(SubInt8, "builtin_sub", TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8))
BUILTIN_BINARY_OP(MulInt8, "builtin_mul", TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8))
BUILTIN_BINARY_OP(DivInt8, "builtin_div", TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8))
BUILTIN_BINARY_OP(EqInt8, "builtin_eq", TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8), TYPE(Int, IntTy::Signed, 8))

BUILTIN_BINARY_OP(AddInt16, "builtin_add", TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16))
BUILTIN_BINARY_OP(SubInt16, "builtin_sub", TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16))
BUILTIN_BINARY_OP(MulInt16, "builtin_mul", TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16))
BUILTIN_BINARY_OP(DivInt16, "builtin_div", TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16))
BUILTIN_BINARY_OP(EqInt16, "builtin_eq", TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16), TYPE(Int, IntTy::Signed, 16))


BUILTIN_BINARY_OP(AddInt32, "builtin_add", TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32))
BUILTIN_BINARY_OP(SubInt32, "builtin_sub", TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32))
BUILTIN_BINARY_OP(MulInt32, "builtin_mul", TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32))
BUILTIN_BINARY_OP(DivInt32, "builtin_div", TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32))
BUILTIN_BINARY_OP(EqInt32, "builtin_eq", TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32), TYPE(Int, IntTy::Signed, 32))

BUILTIN_BINARY_OP(AddInt64, "builtin_add", TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64))
BUILTIN_BINARY_OP(SubInt64, "builtin_sub", TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64))
BUILTIN_BINARY_OP(MulInt64, "builtin_mul", TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64))
BUILTIN_BINARY_OP(DivInt64, "builtin_div", TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64))
BUILTIN_BINARY_OP(EqInt64, "builtin_eq", TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64), TYPE(Int, IntTy::Signed, 64))

BUILTIN_BINARY_OP(AddInt128, "builtin_add", TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128))
BUILTIN_BINARY_OP(SubInt128, "builtin_sub", TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128))
BUILTIN_BINARY_OP(MulInt128, "builtin_mul", TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128))
BUILTIN_BINARY_OP(DivInt128, "builtin_div", TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128))
BUILTIN_BINARY_OP(EqInt128, "builtin_eq", TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128), TYPE(Int, IntTy::Signed, 128))

BUILTIN_BINARY_OP(AddUInt8, "builtin_add", TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8))
BUILTIN_BINARY_OP(SubUInt8, "builtin_sub", TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8))
BUILTIN_BINARY_OP(MulUInt8, "builtin_mul", TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8))
BUILTIN_BINARY_OP(DivUInt8, "builtin_div", TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8))
BUILTIN_BINARY_OP(EqUInt8, "builtin_eq", TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8), TYPE(Int, IntTy::Unsigned, 8))

BUILTIN_BINARY_OP(AddUInt16, "builtin_add", TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16))
BUILTIN_BINARY_OP(SubUInt16, "builtin_sub", TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16))
BUILTIN_BINARY_OP(MulUInt16, "builtin_mul", TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16))
BUILTIN_BINARY_OP(DivUInt16, "builtin_div", TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16))
BUILTIN_BINARY_OP(EqUInt16, "builtin_eq", TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16), TYPE(Int, IntTy::Unsigned, 16))

BUILTIN_BINARY_OP(AddUInt32, "builtin_add", TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32))
BUILTIN_BINARY_OP(SubUInt32, "builtin_sub", TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32))
BUILTIN_BINARY_OP(MulUInt32, "builtin_mul", TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32))
BUILTIN_BINARY_OP(DivUInt32, "builtin_div", TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32))
BUILTIN_BINARY_OP(EqUInt32, "builtin_eq", TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32), TYPE(Int, IntTy::Unsigned, 32))

BUILTIN_BINARY_OP(AddUInt64, "builtin_add", TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64))
BUILTIN_BINARY_OP(SubUInt64, "builtin_sub", TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64))
BUILTIN_BINARY_OP(MulUInt64, "builtin_mul", TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64))
BUILTIN_BINARY_OP(DivUInt64, "builtin_div", TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64))
BUILTIN_BINARY_OP(EqUInt64, "builtin_eq", TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64), TYPE(Int, IntTy::Unsigned, 64))

BUILTIN_BINARY_OP(AddUInt128, "builtin_add", TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128))
BUILTIN_BINARY_OP(SubUInt128, "builtin_sub", TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128))
BUILTIN_BINARY_OP(MulUInt128, "builtin_mul", TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128))
BUILTIN_BINARY_OP(DivUInt128, "builtin_div", TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128))
BUILTIN_BINARY_OP(EqUInt128, "builtin_eq", TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128), TYPE(Int, IntTy::Unsigned, 128))

BUILTIN_BINARY_OP(AddFloat8, "builtin_add", TYPE(Float, 8), TYPE(Float, 8), TYPE(Float, 8))
BUILTIN_BINARY_OP(SubFloat8, "builtin_sub", TYPE(Float, 8), TYPE(Float, 8), TYPE(Float, 8))
BUILTIN_BINARY_OP(MulFloat8, "builtin_mul", TYPE(Float, 8), TYPE(Float, 8), TYPE(Float, 8))
BUILTIN_BINARY_OP(DivFloat8, "builtin_div", TYPE(Float, 8), TYPE(Float, 8), TYPE(Float, 8))
BUILTIN_BINARY_OP(EqFloat8, "builtin_eq", TYPE(Float, 8), TYPE(Float, 8), TYPE(Float, 8))

BUILTIN_BINARY_OP(AddFloat16, "builtin_add", TYPE(Float, 16), TYPE(Float, 16), TYPE(Float, 16))
BUILTIN_BINARY_OP(SubFloat16, "builtin_sub", TYPE(Float, 16), TYPE(Float, 16), TYPE(Float, 16))
BUILTIN_BINARY_OP(MulFloat16, "builtin_mul", TYPE(Float, 16), TYPE(Float, 16), TYPE(Float, 16))
BUILTIN_BINARY_OP(DivFloat16, "builtin_div", TYPE(Float, 16), TYPE(Float, 16), TYPE(Float, 16))
BUILTIN_BINARY_OP(EqFloat16, "builtin_eq", TYPE(Float, 16), TYPE(Float, 16), TYPE(Float, 16))

BUILTIN_BINARY_OP(AddFloat32, "builtin_add", TYPE(Float, 32), TYPE(Float, 32), TYPE(Float, 32))
BUILTIN_BINARY_OP(SubFloat32, "builtin_sub", TYPE(Float, 32), TYPE(Float, 32), TYPE(Float, 32))
BUILTIN_BINARY_OP(MulFloat32, "builtin_mul", TYPE(Float, 32), TYPE(Float, 32), TYPE(Float, 32))
BUILTIN_BINARY_OP(DivFloat32, "builtin_div", TYPE(Float, 32), TYPE(Float, 32), TYPE(Float, 32))
BUILTIN_BINARY_OP(EqFloat32, "builtin_eq", TYPE(Float, 32), TYPE(Float, 32), TYPE(Float, 32))

BUILTIN_BINARY_OP(AddFloat64, "builtin_add", TYPE(Float, 64), TYPE(Float, 64), TYPE(Float, 64))
BUILTIN_BINARY_OP(SubFloat64, "builtin_sub", TYPE(Float, 64), TYPE(Float, 64), TYPE(Float, 64))
BUILTIN_BINARY_OP(MulFloat64, "builtin_mul", TYPE(Float, 64), TYPE(Float, 64), TYPE(Float, 64))
BUILTIN_BINARY_OP(DivFloat64, "builtin_div", TYPE(Float, 64), TYPE(Float, 64), TYPE(Float, 64))
BUILTIN_BINARY_OP(EqFloat64, "builtin_eq", TYPE(Float, 64), TYPE(Float, 64), TYPE(Float, 64))

BUILTIN_BINARY_OP(AddFloat128, "builtin_add", TYPE(Float, 128), TYPE(Float, 128), TYPE(Float, 128))
BUILTIN_BINARY_OP(SubFloat128, "builtin_sub", TYPE(Float, 128), TYPE(Float, 128), TYPE(Float, 128))
BUILTIN_BINARY_OP(MulFloat128, "builtin_mul", TYPE(Float, 128), TYPE(Float, 128), TYPE(Float, 128))
BUILTIN_BINARY_OP(DivFloat128, "builtin_div", TYPE(Float, 128), TYPE(Float, 128), TYPE(Float, 128))
BUILTIN_BINARY_OP(EqFloat128, "builtin_eq", TYPE(Float, 128), TYPE(Float, 128), TYPE(Float, 128))

#undef BUILTIN_BINARY_OP
#undef BUILTINS_KIND
