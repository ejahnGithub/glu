// Expands for any token type
#ifndef TOKEN
    #define TOKEN(Name)
#endif

// Expands for every Glu and GIL keyword such as
// 'if', 'else', 'cond_br', etc. See below for more
// specific keyword types.
#ifndef KEYWORD
    #define KEYWORD(Keyword) TOKEN(kw_ ## Keyword)
#endif

// Expands for every Glu specific keyword
#ifndef GLU_KEYWORD
    #define GLU_KEYWORD(Keyword) KEYWORD(Keyword)
#endif

// Expands for any Glu keyword used in a declaration
#ifndef DECL_KEYWORD
    #define DECL_KEYWORD(Keyword) GLU_KEYWORD(Keyword)
#endif

// Expands for any Glu keyword used in a statement context
#ifndef STMT_KEYWORD
    #define STMT_KEYWORD(Keyword) GLU_KEYWORD(Keyword)
#endif

// Expands for any Glu keyword used in an expression context
#ifndef EXPR_KEYWORD
    #define EXPR_KEYWORD(Keyword) GLU_KEYWORD(Keyword)
#endif

// Expands for any GIL keyword
#ifndef GIL_KEYWORD
    #define GIL_KEYWORD(Keyword) KEYWORD(Keyword)
#endif

/**
  * Expands for every Glu ponctuator.
  * @param Keyword The symbolic name of the ponctuator.
  * for example 'l_paren', 'r_paren', 'l_brace', etc.
  * @param value The actual character of the ponctuator.
  * for example '(', ')', '{', etc.
*/
#ifndef PUNCTUATOR
    #define PUNCTUATOR(Keyword, value) TOKEN(Keyword)
#endif

// Expands for any literal values, ex: 'integer_literal'.
#ifndef LITERAL
    #define LITERAL(Name) TOKEN(Name)
#endif

// Declarations keywords
DECL_KEYWORD(struct)
DECL_KEYWORD(union)
DECL_KEYWORD(enum)
DECL_KEYWORD(typealias)
DECL_KEYWORD(func)
DECL_KEYWORD(let)
DECL_KEYWORD(var)
DECL_KEYWORD(import)

// Statement keywords
STMT_KEYWORD(if)
STMT_KEYWORD(else)
STMT_KEYWORD(while)
STMT_KEYWORD(for)
STMT_KEYWORD(return)
STMT_KEYWORD(break)
STMT_KEYWORD(continue)
STMT_KEYWORD(in)

// Expression keywords
EXPR_KEYWORD(true)
EXPR_KEYWORD(false)
EXPR_KEYWORD(as)


// Punctuators
PUNCTUATOR(l_paren, '(')
PUNCTUATOR(r_paren, ')')
PUNCTUATOR(l_brace, '{')
PUNCTUATOR(r_brace, '}')
PUNCTUATOR(l_bracket, '[')
PUNCTUATOR(r_bracket, ']')
PUNCTUATOR(dot, '.')
PUNCTUATOR(comma, ',')
PUNCTUATOR(colon, ':')
PUNCTUATOR(semi_colon, ';')
PUNCTUATOR(arrow, '->')
PUNCTUATOR(ellipsis, '...')
PUNCTUATOR(equal, '=')
PUNCTUATOR(backslash, '\\')
PUNCTUATOR(exclamation, '!')
PUNCTUATOR(question, '?')
PUNCTUATOR(string_quote, '\"')
PUNCTUATOR(single_quote, '\'')

// Literals
LITERAL(integer_literal)
LITERAL(floating_literal)
LITERAL(string_literal)


#undef TOKEN
#undef KEYWORD
#undef GLU_KEYWORD
#undef DECL_KEYWORD
#undef STMT_KEYWORD
#undef EXPR_KEYWORD
#undef GIL_KEYWORD
#undef PUNCTUATOR
#undef LITERAL
