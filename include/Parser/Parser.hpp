#ifndef GLU_PARSER_HPP
#define GLU_PARSER_HPP

#include "AST/ASTContext.hpp"
#include "Basic/Diagnostic.hpp"
#include "Basic/SourceManager.hpp"
#include "Basic/Tokens.hpp"
#include "Lexer/Scanner.hpp"

namespace glu {
class BisonParser; // Forward declaration of the class generated by Bison
}

#include "Parser.tab.hpp" // Include the generated Bison parser

namespace glu {

class Parser {
    ast::ModuleDecl *_moduleDecl;
    BisonParser _parser;

public:
    explicit Parser(
        Scanner &s, ast::ASTContext &ctx, SourceManager &sm,
        DiagnosticManager &diag, bool debug = false
    )
        : _moduleDecl(nullptr), _parser(s, ctx, sm, diag, &_moduleDecl)
    {
        if (debug) {
            _parser.set_debug_level(1);
        }
    }

    ~Parser() = default;

    bool parse() { return _parser.parse() == 0; }

    ast::ModuleDecl *getAST() const { return _moduleDecl; }
};

} // namespace glu

#endif
