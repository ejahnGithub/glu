//
// RUN: gluc -c %s -o %s.o > /dev/null
//
// Test valid uses of @linkage_name attribute (should parse and validate without errors)

// Valid function prototype with linkage_name
@linkage_name("custom_hello")
func world();

// Valid function definition with linkage_name
@linkage_name("implementation_name")
func myFunction() {
    return;
}

// Valid function with parameters and linkage_name
@linkage_name("param_func")
func withParams(a: Int, b: Double) -> Int {
    return a;
}

// Multiple functions with different linkage names (should be fine)
@linkage_name("func1")
func function1();

@linkage_name("func2")
func function2();

@linkage_name("func3")
func function3(x: Int);

// Function without linkage_name mixed with ones that have it (should be fine)
func normalFunction() {
    return;
}

// Call the functions using their original names (not linkage names)
func testCalls() {
    world();  // calls the function with linkage name "custom_hello"
    myFunction();
    let result = withParams(42, 3.14);
    function1();
    function2();
    function3(100);
    normalFunction();
}
